:host {
    --cs-table-inner-vertical-border: 1px solid rgba(0, 0, 0, 0.12);
    --cs-table-active-resizing-cell-border: 1px dashed rgb(179, 61, 32);
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    box-sizing: border-box;
    overflow: hidden;
}

.table-area {
    // display: flex;
    --resposive-label-width: 50px;
    flex: 1 1 auto;
    box-sizing: border-box;
    overflow: auto;
    // &::-webkit-scrollbar {
    //     height: 6px;
    //     width: 6px;
    // }

    // &::-webkit-scrollbar-thumb {
    //     background: rgba(0, 0, 0, .26)
    // }
}

::ng-deep mat-cell,
::ng-deep mat-header-cell,
::ng-deep mat-filter-cell,
::ng-deep mat-footer-cell {
    flex: 1;
    border-right: var(--cs-table-inner-vertical-border);

    [dir='rtl'] & {
        border-right: unset;
        border-left: var(--cs-table-inner-vertical-border);
    }

    // min-width: 400px;
}

mat-header-row {
    background-color: cornflowerblue;
    box-sizing: border-box;
}

::ng-deep mat-filter-row {
    box-sizing: border-box;
    background-color: rgb(235, 235, 210) !important;
}


::ng-deep mat-footer-row,
::ng-deep mat-footer-row:hover {
    background-color: cadetblue !important;
    box-sizing: border-box;
}


.cs-tree-node-body {
    display: flex;
    flex: 1 1 auto;
    outline: none;
    align-items: center;
    background-color: var(--cs-tree-node-background-color, transparent);
    border-radius: var(--cs-tree-node-border-radius, var(--mat-sys-corner-medium));

    .cs-tree-expand-arrow {
        display: inline-block;
        opacity: .7;
        cursor: pointer;
        transition: transform 0.3s ease;

        [dir='rtl'] & {
            transform: rotate(180deg);
        }

        &:hover {
            opacity: 1;
        }

        &.cs-tree-expand-arrow-isExpanded {
            transform: rotate(90deg);
            opacity: 1;
        }
    }

    .cs-tree-arrow-container {
        min-width: 25px;
        min-height: var(--mat-tree-node-min-height, 48px);
        display: flex;
        align-items: center;
        outline: none;
    }

    .cs-tree-node-icon {
        color: var(--cs-tree-node-icon-color, var(--mat-sys-primary));
    }

    .cs-tree-node-text {
        flex: 1 1 auto;
        // height: 40px;
        display: flex;
        align-items: center;
        padding: 0 5px;
        user-select: none;
    }

    &:not(.cs-tree-node-current) {

        &:hover:not(:focus),
        &.cs-context-menu-opened:not(:focus),
        &.cs-hover-overlay-active:not(:focus) {
            --cs-tree-node-background-color: var(--cs-tree-node-hover-state-layer-color,
                    color-mix(in srgb, var(--mat-sys-inverse-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent));
            --cs-tree-node-border-radius: var(--cs-tree-node-hover-state-layer-shape, var(--mat-sys-corner-medium));
        }

        &:focus {
            --cs-tree-node-background-color: var(--cs-tree-node-focus-state-layer-color,
                    color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent));
            --cs-tree-node-border-radius: var(--cs-tree-node-focus-state-layer-shape, var(--mat-sys-corner-medium));
        }
    }

    &.cs-tree-node-current {
        --cs-tree-node-background-color: var(--cs-tree-node-pressed-state-layer-color, var(--mat-sys-secondary-container));
        --cs-tree-node-border-radius: var(--cs-tree-node-pressed-state-layer-shape, var(--mat-sys-corner-medium));
    }
}