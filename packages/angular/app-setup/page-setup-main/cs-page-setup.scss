@use '@angular/material' as mat;

:host {
    display: flex;
    width: 100%;
    flex-direction: column;
}

.cs-page-setup-toolbar {
    --mat-toolbar-container-text-color: var(--mat-sys-primary);
    --mat-toolbar-container-background-color: var(--mat-sys-primary-container);
    --mat-toolbar-standard-height: 40px;
    --mdc-icon-button-icon-color: var(--mat-sys-primary);
}

.invalid-form-button {
    --mat-icon-color: var(--invalid-form-icon-color, rgb(230, 38, 25));
}

.cs-page-setup-toolbar-spacer {
    flex: 1 1 auto;
}

.cs-page-setup-toggle-group {
    --mat-standard-button-toggle-state-layer-color: var(--mat-outlined-button-state-layer-color, var(--mat-sys-primary));
    --mat-standard-button-toggle-text-color: var(--mdc-outlined-button-label-text-color, var(--mat-sys-primary));
    --mat-legacy-button-toggle-state-layer-color: var(--mat-outlined-button-state-layer-color, var(--mat-sys-primary));
    --mat-ripple-color: var(--mat-text-button-ripple-color, color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent));
    --mat-standard-button-toggle-selected-state-text-color: rgb(127, 8, 8);
}

.cs-page-area-content {
    flex: 1 1 auto;
    transition: opacity 0.5s, visibility 0.5s;
    opacity: 1;
    visibility: visible;

    &[hidden] {
        opacity: 0;
        visibility: hidden;
        max-width: 0;
    }
}

.cs-page-setup-splitter {
    border: 1px solid lightgray;

    .cs-page-setup-area {
        display: flex;

        &:not(.cs-page-setup-area-hasItems) {
            display: none;
        }
    }

    .cs-page-setup-list-area {
        display: flex;
        flex-direction: column;

        .cs-page-setup-list-control {
            flex: 1 1 auto;
        }
    }
}